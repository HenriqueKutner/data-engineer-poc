x-airflow-common:
  &airflow-common
  image: apache/airflow:2.7.3
  environment:
    &airflow-common-env
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    AIRFLOW__CORE__FERNET_KEY: ''
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    AIRFLOW__CORE__LOGGING_LEVEL: INFO
  volumes:
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./plugins:/opt/airflow/plugins
    - ./data:/opt/airflow/data
  depends_on:
    &airflow-common-depends-on
    postgres:
      condition: service_healthy

services:
  postgres:
    image: postgres:12
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${POSTGRES_USER}" ]
      interval: 5s
      retries: 5
    networks:
      - airflow_network

  northwind_db:
    image: postgres:12
    environment:
      POSTGRES_DB: ${NORTHWIND_DB}
      POSTGRES_USER: ${NORTHWIND_USER}
      POSTGRES_PASSWORD: ${NORTHWIND_PASSWORD}
    volumes:
      - ./dbdata:/var/lib/postgresql/data
      - ./data/northwind.sql:/docker-entrypoint-initdb.d/northwind.sql
    ports:
      - 5433:5432
    networks:
      - airflow_network

  new_postgres_db:
    image: postgres:12
    environment:
      POSTGRES_DB: ${NEW_POSTGRES_DB}
      POSTGRES_USER: ${NEW_POSTGRES_USER}
      POSTGRES_PASSWORD: ${NEW_POSTGRES_PASSWORD}
    volumes:
      - ./new_postgres_data:/var/lib/postgresql/data
    ports:
      - 5434:5432
    networks:
      - airflow_network

  airflow-webserver:
    <<: *airflow-common
    command: webserver
    ports:
      - 8080:8080
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "--fail",
          "http://localhost:8080/health"
        ]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always
    networks:
      - airflow_network

  airflow-scheduler:
    <<: *airflow-common
    command: scheduler
    restart: always
    networks:
      - airflow_network

  airflow-init:
    image: apache/airflow:2.7.3
    entrypoint: /bin/bash
    command:
      - -c
      - |
        airflow db init &&
        airflow users create \
          --username airflow \
          --password airflow \
          --firstname Anonymous \
          --lastname Admin \
          --role Admin \
          --email admin@example.com
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - airflow_network

volumes:
  postgres-db-volume:
  new_postgres_data:


networks:
  airflow_network:
    driver: bridge
